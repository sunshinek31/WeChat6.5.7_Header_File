//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "FTSWebSearchDataSource.h"
#import "UIScrollViewDelegate.h"
#import "UISearchBarDelegate.h"
#import "UISearchDisplayDelegate.h"
#import "WSJSEventHandleDelegate.h"
#import "WSTagSearchDelegate.h"

@class FTSWebSearchMgr, MMTagSearchBar, MMUIViewController, NSDictionary, NSMutableArray, NSString, UIButton, UIImageView, UISearchDisplayController, UITextField, UIView, WSContactSearchLogic, WSJSEventHandler, WSResultViewLogic, WSTagSearchLogic;

@interface MMWebSearchController : NSObject <UISearchBarDelegate, UISearchDisplayDelegate, UIScrollViewDelegate, WSJSEventHandleDelegate, FTSWebSearchDataSource, WSTagSearchDelegate>
{
    MMUIViewController *_contentVC;
    FTSWebSearchMgr *_webSearchMgr;
    NSMutableArray *_arrResultViews;
    WSResultViewLogic *_resultViewLogic;
    NSString *_query;
    UIImageView *_searchBarWrap;
    UIView *_searchBarSuperView;
    UIButton *_backButton;
    WSJSEventHandler *_jsEventHandler;
    WSContactSearchLogic *_searchContactLogic;
    WSTagSearchLogic *_tagSearchLogic;
    int _searchScene;
    _Bool _isDetailSearch;
    unsigned long long _mainBusinessType;
    unsigned long long _detailSearchType;
    NSString *_searchID;
    NSString *_browsingTID;
    NSMutableArray *_arrDeletedTID;
    UIImageView *_bottomViewShadow;
    _Bool _hasMoving;
    double _moveStartOffset;
    double _moveCurOffset;
    double _moveContentOffsetY;
    double _searchTextFieldNormalWidth;
    struct CGSize _searchIconDefaultSize;
    _Bool _bSkipBackButtonAtFirst;
    _Bool _alwaysForbidVCInteractivePop;
    _Bool _bUseBlurViewBeforeSearch;
    id <MMWebSearchViewDelegate> _delegate;
    NSDictionary *_urlParams;
    UIView *_viewForBlur;
    UIView *_resultContainerView;
    UIView *_blurView;
    UISearchDisplayController *_searchDisplayController;
    MMTagSearchBar *_searchBar;
    UITextField *_searchTextField;
    UIImageView *_searchLeftIcon;
    UIView *_searchPromtLabel;
}

@property(retain, nonatomic) UIView *searchPromtLabel; // @synthesize searchPromtLabel=_searchPromtLabel;
@property(retain, nonatomic) UIImageView *searchLeftIcon; // @synthesize searchLeftIcon=_searchLeftIcon;
@property(retain, nonatomic) UITextField *searchTextField; // @synthesize searchTextField=_searchTextField;
@property(retain, nonatomic) MMTagSearchBar *searchBar; // @synthesize searchBar=_searchBar;
@property(retain, nonatomic) UISearchDisplayController *searchDisplayController; // @synthesize searchDisplayController=_searchDisplayController;
@property(readonly, nonatomic) UIView *blurView; // @synthesize blurView=_blurView;
@property(readonly, nonatomic) UIView *resultContainerView; // @synthesize resultContainerView=_resultContainerView;
@property(readonly, nonatomic) UIView *searchBarWrap; // @synthesize searchBarWrap=_searchBarWrap;
@property(nonatomic) __weak UIView *viewForBlur; // @synthesize viewForBlur=_viewForBlur;
@property(nonatomic) _Bool bUseBlurViewBeforeSearch; // @synthesize bUseBlurViewBeforeSearch=_bUseBlurViewBeforeSearch;
@property(retain, nonatomic) NSDictionary *urlParams; // @synthesize urlParams=_urlParams;
@property(nonatomic) _Bool bSkipBackButtonAtFirst; // @synthesize bSkipBackButtonAtFirst=_bSkipBackButtonAtFirst;
@property(nonatomic) _Bool alwaysForbidVCInteractivePop; // @synthesize alwaysForbidVCInteractivePop=_alwaysForbidVCInteractivePop;
@property(nonatomic) __weak id <MMWebSearchViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)onTagSearchBarInfoChangedToNotify:(id)arg1;
- (void)tryAsyncSearchContact:(id)arg1;
- (void)onRequestLocalSuggestion:(id)arg1;
- (void)currentFriendScene:(unsigned int *)arg1 withParams:(id)arg2;
- (void)onDeleteBrowsingSnsItemOnH5;
- (void)onBrowsingSnsItem:(id)arg1;
- (_Bool)checkBrowsingSnsItem:(id)arg1;
- (void)onClickRecmdWord:(id)arg1;
- (void)onLaunchDetailPage:(id)arg1;
- (void)onSearchInputChanged:(id)arg1;
- (void)enableSearchBar;
- (void)hideSearchKeyboard;
- (id)viewStacks;
- (unsigned long long)businessType;
- (id)query;
- (void)onRemoveDetailView;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)searchDisplayControllerDidEndSearch:(id)arg1;
- (void)searchDisplayControllerWillEndSearch:(id)arg1;
- (void)searchDisplayControllerDidBeginSearch:(id)arg1;
- (void)searchDisplayControllerWillBeginSearch:(id)arg1;
- (void)searchBarCancelButtonClicked:(id)arg1;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (_Bool)searchBar:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)searchBarTextDidBeginEditing:(id)arg1;
- (void)onTapBlurView;
- (void)cancelMoveDetailView;
- (void)moveDetailViewToRight;
- (void)updateMovingDetailView;
- (void)handlePanGestureForDetailView:(id)arg1;
- (void)popFromDetailSearch;
- (void)resetSearchIconFrame;
- (id)searchLeftView;
- (void)hideKeyboard;
- (void)enableButton:(id)arg1;
- (id)urlParmasForDetailPage:(id)arg1;
- (void)loadLocalHtmlForDetailPage:(id)arg1;
- (id)makeNewDetailView:(id)arg1;
- (void)willBeginDetailSearch:(id)arg1;
- (void)loadH5ForMainView;
- (id)findDimmingView:(id)arg1;
- (void)removeSearchDimmingView;
- (double)getSearchTextFieldWidth;
- (void)beginSearch:(_Bool)arg1;
- (void)notifyPageOfQueryChanged:(id)arg1;
- (void)notifyPageOfSearchClick:(id)arg1;
- (void)asyncSearch:(id)arg1;
- (void)cancelSearch;
- (void)onClickSearchButton:(id)arg1;
- (void)onBackBtnClick;
- (id)secondLastResultView;
- (id)currentResultView;
- (_Bool)isSpecialTopBarMode;
- (void)initBackButton;
- (void)updateContentView;
- (void)initBlurView;
- (void)initResultView;
- (void)initSearchBar;
- (void)initView;
- (void)initTagSearchLogic;
- (void)initData;
- (void)prepareSearchAnimated:(_Bool)arg1;
- (void)clearResource;
- (void)dealloc;
- (id)initWithScene:(int)arg1 contentVC:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

