//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "MMTipsViewControllerDelegate.h"
#import "WAAppTaskLoaderDelegate.h"
#import "WAContactMgrExtension.h"
#import "WAJSCoreServiceDelegate.h"
#import "WAPermissionHandlerDelegate.h"
#import "WAWebViewDelegate.h"

@class CContact, MMTimer, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, UINavigationController, WAAppTaskLoader, WAAppTaskReferrerInfo, WAAppTaskShowFromBackgroundContext, WAJSCoreService, WAPermissionHandler, WAWebViewController;

@interface WAAppTask : NSObject <WAAppTaskLoaderDelegate, WAWebViewDelegate, WAJSCoreServiceDelegate, WAPermissionHandlerDelegate, MMTipsViewControllerDelegate, WAContactMgrExtension>
{
    NSString *_appID;
    CContact *_contact;
    NSString *_relativeURL;
    unsigned int _debugModeType;
    NSDictionary *_dicExtraInfo;
    WAAppTaskShowFromBackgroundContext *_showFromBackgroundContext;
    _Bool _isDebugAndVConsoleOpen;
    WAAppTaskReferrerInfo *_referrerInfo;
    NSString *_lastLaunchWeAppID;
    NSMutableArray *_arrWebView;
    NSMutableDictionary *_dicTabWebView;
    WAWebViewController *_preloadWebView;
    WAJSCoreService *_appService;
    _Bool _isWriteFrameContentCache;
    WAWebViewController *_curAppRouteWebView;
    WAWebViewController *_currentAppRouteDoneWebView;
    _Bool _isForeground;
    _Bool _isPopParent;
    _Bool _isPopAllParent;
    _Bool _isEnableClose;
    _Bool _isWebViewHadAppear;
    _Bool _isBackgroundOnLaunchOtherWeApp;
    unsigned int _webViewMaxDepth;
    unsigned int _backgroundTaskMaxTimeout;
    NSString *_refererHost;
    unsigned int _backgroundNetworkInterruptedTimeout;
    _Bool _bIsAlreadyShowCloseAppTips;
    _Bool _resetTaskWhenEnterForeground;
    MMTimer *_backgroundNetworkTimer;
    _Bool _ignoreMemoryWarning;
    unsigned int _timeEnterBackground;
    unsigned int _enterScene;
    id <WAAppTaskDelegate> delegate;
    NSMutableDictionary *_userData;
    NSString *_enterPath;
    WAAppTaskLoader *_appLoader;
    WAPermissionHandler *_permissionHandler;
    UINavigationController *_weakNavigationController;
}

@property(nonatomic) __weak UINavigationController *weakNavigationController; // @synthesize weakNavigationController=_weakNavigationController;
@property(retain) WAPermissionHandler *permissionHandler; // @synthesize permissionHandler=_permissionHandler;
@property(retain, nonatomic) WAAppTaskLoader *appLoader; // @synthesize appLoader=_appLoader;
@property(retain, nonatomic) NSString *enterPath; // @synthesize enterPath=_enterPath;
@property(nonatomic) unsigned int enterScene; // @synthesize enterScene=_enterScene;
@property(retain, nonatomic) NSMutableDictionary *userData; // @synthesize userData=_userData;
@property(nonatomic) _Bool ignoreMemoryWarning; // @synthesize ignoreMemoryWarning=_ignoreMemoryWarning;
@property(nonatomic) unsigned int timeEnterBackground; // @synthesize timeEnterBackground=_timeEnterBackground;
@property(nonatomic) __weak id <WAAppTaskDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (void)onBackgroundNetworkTimeout:(id)arg1;
- (void)invalidateBackgroundNetworkTimer;
- (void)scheduleBackgroundNetworkTimer;
- (void)onClickTipsBtn:(id)arg1 Index:(long long)arg2 tipTag:(long long)arg3;
- (void)showTipsViewWithTitle:(id)arg1 content:(id)arg2 tipsTag:(long long)arg3 delegate:(id)arg4;
- (id)urlForContactForbbidenSceneIfNeed:(id)arg1;
- (void)doCheckContactRuningFlag:(id)arg1;
- (void)onModifyWeAppContact:(id)arg1;
- (id)getExtraInfo:(id)arg1 remove:(_Bool)arg2;
- (void)addExtraInfo:(id)arg1 forKey:(id)arg2;
- (void)onUserAuthFailWithJSAPI:(id)arg1 failHandler:(CDUnknownBlockType)arg2 errMsg:(id)arg3 scene:(unsigned long long)arg4;
- (void)onUserAuthOKWithJSAPI:(id)arg1 handler:(CDUnknownBlockType)arg2 scene:(unsigned long long)arg3;
- (void)printConsoleLog:(id)arg1;
- (unsigned long long)getTaskStatus;
- (id)GetWeAppPluginByName:(id)arg1;
- (void)resetTask;
- (void)closeTask;
- (void)taskDidOpen;
- (_Bool)isTaskRunning;
- (void)stopHangUp;
- (void)enterBackground:(long long)arg1;
- (void)enterForegroundIfBackFromLaunchWeApp;
- (_Bool)isFirstWebViewOnForeground;
- (void)checkForegound;
- (void)leaveForeground;
- (void)enterForeground;
- (_Bool)isForeground;
- (void)checkUserAuthWithJSAPI:(id)arg1 handler:(CDUnknownBlockType)arg2 failHandler:(CDUnknownBlockType)arg3 fromAppService:(id)arg4;
- (_Bool)hasPermissionWithJSAPI:(id)arg1 getState:(unsigned int *)arg2 fromAppService:(id)arg3;
- (void)setAppServiceCurrentWebView:(id)arg1;
- (void)appServiceSendOnEnterBackground:(long long)arg1;
- (void)appServiceSendOnEnterForeground:(id)arg1;
- (id)getStrForOpenType:(unsigned long long)arg1 webviewID:(unsigned long long)arg2;
- (void)sendOnAppRouteDoneWithWebView:(id)arg1;
- (void)sendAppRouteEventFromWebView:(id)arg1 openType:(unsigned long long)arg2;
- (void)setupAppServiceWithContact:(id)arg1 extraInfo:(id)arg2;
- (void)clearAppService;
- (void)webViewInjectScriptFail:(id)arg1;
- (void)webViewDidTerminateInContentProcess:(id)arg1;
- (void)reportWKWebViewTerminateAction:(id)arg1;
- (void)sendJSEventToService:(id)arg1 param:(id)arg2 fromWebView:(id)arg3;
- (void)publishPostMessage:(id)arg1 fromWebView:(id)arg2;
- (_Bool)checkWebViewRunMode:(id)arg1;
- (_Bool)checkServiceRunMode:(id)arg1;
- (void)checkUserAuthWithJSAPI:(id)arg1 handler:(CDUnknownBlockType)arg2 failHandler:(CDUnknownBlockType)arg3 fromWebView:(id)arg4;
- (_Bool)hasPermissionWithJSAPI:(id)arg1 getState:(unsigned int *)arg2 fromWebView:(id)arg3;
- (void)webView:(id)arg1 didLoadFrameContent:(id)arg2;
- (id)askFrameContentFromWebView:(id)arg1;
- (unsigned long long)getWebViewDepthInStack;
- (id)getLastWebViewFrom:(id)arg1;
- (id)getFirstWebViewFrom:(id)arg1;
- (_Bool)webViewIsSameDepthWithFirstPage:(id)arg1;
- (_Bool)webViewIsFirstPage:(id)arg1;
- (void)makeWebViewEnableClose:(_Bool)arg1;
- (_Bool)isForceEnableClose;
- (void)killAppFrom:(id)arg1 animate:(_Bool)arg2;
- (void)enterBackgroundFrom:(id)arg1 mode:(long long)arg2 animate:(_Bool)arg3;
- (void)popWebViewCount:(int)arg1 fromWebView:(id)arg2;
- (void)popToFirstWebViewFrom:(id)arg1 animated:(_Bool)arg2;
- (void)webViewDidSwitchTab:(id)arg1;
- (id)getPreviousWebViewFromWebView:(id)arg1;
- (id)getTabChildWebViewWithRelativeURL:(id)arg1 fromWebView:(id)arg2;
- (void)webViewOnBeforeEveluateIndexData:(id)arg1;
- (void)webViewDidBePoped:(id)arg1;
- (void)webViewDidDisappear:(id)arg1;
- (void)webViewDidAppear:(id)arg1;
- (void)saveFrameContentCache:(id)arg1;
- (id)loadFrameContentCache;
- (id)frameContentCachePath;
- (id)getAndDeletePreLoadWebView;
- (void)setupPreloadWebViewFromWebView:(id)arg1;
- (void)updateAllWebViewExtraInfo:(id)arg1;
- (id)generateExtraInfoWithAppID:(id)arg1 Contact:(id)arg2 inputExtraInfo:(id)arg3;
- (id)getTabChildWebViewWithRelativeURL:(id)arg1 fromParentWebView:(id)arg2;
- (id)getChildWebViewWithRelativeURL:(id)arg1 childExtraInfo:(id)arg2 fromParentWebView:(id)arg3;
- (id)getNewWebViewControllerWithContact:(id)arg1 appID:(id)arg2 baseURL:(id)arg3 pageRelativeURL:(id)arg4 webviewId:(unsigned int)arg5;
- (void)clearTabWebView;
- (void)removeTabWebViewWithParentWebView:(id)arg1;
- (void)addTabWebView:(id)arg1 parentWebView:(id)arg2;
- (void)clearAndPopAllParentWebViewAndReservedChild:(id)arg1;
- (void)clearAndPopAllWebViewIgnoreTab;
- (void)popWebView:(id)arg1;
- (void)removeWebView:(id)arg1;
- (void)addWebView:(id)arg1;
- (void)closePresentViewController;
- (void)removeWebViewFromNavigationController:(_Bool)arg1;
- (void)sendUIEventAfterShowFromBackground:(id)arg1;
- (void)showWebViewFromBackground:(id)arg1 loadingInfo:(id)arg2;
- (unsigned int)webViewDepth;
- (_Bool)loadAppConfig:(id)arg1;
- (void)setupAppConfig;
- (void)removeAndPopAllParentWebViewFromChild:(id)arg1;
- (void)removeParentWebView:(id)arg1;
- (void)removeChildWebView:(id)arg1 fromParentWebView:(id)arg2;
- (void)getChildWebView:(id *)arg1 withRelativeURL:(id)arg2 childExtraInfo:(id)arg3 fromParentWebView:(id)arg4;
- (void)setupAppServiceAndWebViewWithAppID:(id)arg1 contact:(id)arg2 baseURL:(id)arg3 pageRelativeURL:(id)arg4 getWebView:(id *)arg5;
- (void)resetAppLoader;
- (_Bool)isLoading;
- (id)referrerAppID;
- (id)lastLaunchAppID;
- (id)weAppJumpToUserNameForAppID:(id)arg1;
- (void)enterBackgroundOnLaunchOtherWeApp:(id)arg1;
- (id)getCurrentTaskNavigationController;
- (id)getAllWebViews;
- (void)sendJSEventToWebView:(id)arg1 param:(id)arg2 toWebviews:(id)arg3;
- (_Bool)isReachMaxWebViewDepth;
- (void)openChildWebViewWithRelativeURL:(id)arg1 childExtraInfo:(id)arg2 fromParent:(id)arg3 isPopParent:(_Bool)arg4 isPopAllParent:(_Bool)arg5 errorHandler:(CDUnknownBlockType)arg6;
- (void)openChildWebViewWithRelativeURL:(id)arg1 childExtraInfo:(id)arg2 fromParent:(id)arg3 isPopAllParent:(_Bool)arg4 errorHandler:(CDUnknownBlockType)arg5;
- (void)openChildWebViewWithRelativeURL:(id)arg1 childExtraInfo:(id)arg2 fromParent:(id)arg3 isPopParent:(_Bool)arg4 errorHandler:(CDUnknownBlockType)arg5;
- (void)openWithContact:(id)arg1 relativeURL:(id)arg2 extraInfo:(id)arg3 navigationController:(id)arg4 showConfig:(id)arg5 openParameter:(id)arg6 errorHandler:(CDUnknownBlockType)arg7;
- (void)openWithContact:(id)arg1 relativeURL:(id)arg2 extraInfo:(id)arg3 navigationController:(id)arg4 showConfig:(id)arg5 errorHandler:(CDUnknownBlockType)arg6;
- (void)openWithContact:(id)arg1 relativeURL:(id)arg2 extraInfo:(id)arg3 navigationController:(id)arg4 errorHandler:(CDUnknownBlockType)arg5;
- (id)currentExtInfo;
- (unsigned int)backgroundTaskMaxTimeout;
- (_Bool)isFirstWebViewInNavigator;
- (_Bool)isRealForegroundState;
- (_Bool)isShowOnForeground;
- (unsigned long long)webViewInNavigationCount;
- (unsigned int)debugModeType;
- (id)relativeURL;
- (id)contact;
- (id)appID;
- (void)dealloc;
- (id)initWithAppID:(id)arg1 debugModeType:(unsigned int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

